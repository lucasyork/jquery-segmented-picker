{"name":"Jquery-segmented-picker","tagline":"This jquery plugin is simply wrapper for text input to become picker for any format you wish. ","body":"#jquery-segmented-picker\r\n##Description\r\nThis plugin is simply wrapper for text input to become picker for any format you wish.\r\nIt is meant to be simple and to look simple while giving you some control over what user writes.\r\n\r\nThe main idea in it is to avoid showing complicated popups while there is possibility to use keyboard only.\r\nThat way you can incorporate it in any more complex forms without worrying about complicating layout further.\r\n\r\nWe will use it mainly as simple time picker, time duration picker and maybe as currency picker.\r\n\r\n##Disclaimer\r\n- This plugin is nowhere near ready. \r\n- It is full of nasty insects. \r\n- Button positioning may not work in some cases.\r\n\r\nWe are sharing it simply to let others use it and gather feedback if anyone would like to share one.\r\nIf you have any idea, please share it with me or fork the stuff and come back with pull request.\r\n\r\n##Usage:\r\n```javascript\r\n$('input').segmentPicker({\r\n    segments: [ segment, segment, ... ],\r\n    onIncrement: function(newVal, oldVal, segments, segmentIdx){ ... },\r\n    onDecrement: function(newVal, oldVal, segments, segmentIdx){ ... }\r\n})\r\n```\r\n\r\nParameters:\r\n\r\nName | Description\r\n---- | -----------\r\n`segments`|An array of segment definitions (see segment types below)\r\n`onIncrement`|Callback for incrementing action. It is quite useful when you want to change another segment on value change (see 12h time picker example)\r\n`onDecrement`|Callback for decrementing action. It is quite useful when you want to change another segment on value change (see 12h time picker example)\r\n\r\nPossible segments:\r\n\r\nSegment type | Expected parameter | Description   | Example\r\n------------- | -------- | ------------- | -------\r\nNumeric       | Object {min:*min*, max:*max*} | This segment will try to provide simple numeric spinner functionality on given segment | `{min:1, max:12}` - definition for hours in 12h format\r\nSeparator     | String \"*separator*\" | This segment is inactive for editing and will act simply as decoration for format      |   `\"km/h \"` - units are nice example of decorators\r\nEnum          | Array [*Enum1, Enum2 ...* ] | This will act as very simple picker for already defined set of values |  `[\"am\", \"pm\"]` - am/pm format\r\n\r\n##Usage examples:\r\n\r\n### simple floating point speed picker:\r\n```javascript\r\n$('input').segmentPicker({\r\n    segments: [{min: 0, max: 999}, \".\", {min: 0, max: 99}, \" km/h\"]\r\n})\r\n```\r\n\r\n### more advanced 12h time format picker:\r\n```javascript\r\n$('inut').segmentPicker({\r\n    segments: [{min: 1, max: 12}, \":\", {min: 0, max: 59}, \" \", [\"am\", \"pm\"]],\r\n    onIncrement: function(newVal, oldVal, segments, selectedSegment)\r\n    {\r\n        if(selectedSegment == 0 && oldVal == \"11\" && newVal == \"12\")\r\n            segments[4].increment();\r\n        else if(selectedSegment == 2 && oldVal == \"59\" && newVal == \"00\")\r\n            segments[0].increment()\r\n    },\r\n    onDecrement: function(newVal, oldVal, segments, selectedSegment){\r\n        if(selectedSegment == 0 && oldVal == \"12\" && newVal == \"11\")\r\n            segments[4].decrement();\r\n        else if(selectedSegment == 2 && oldVal == \"00\" && newVal == \"59\")\r\n            segments[0].decrement()\r\n    }\r\n});\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}